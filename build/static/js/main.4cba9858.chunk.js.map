{"version":3,"sources":["components/Album/Album.js","components/Nav/Nav.js","components/Wrapper/Wrapper.js","components/Title/Title.js","App.js","index.js"],"names":["Album","props","className","value","id","onClick","handleClick","alt","name","src","image","Nav","href","title","correctIncorrect","score","topScore","Wrapper","children","Title","randomizer","array","i","length","j","Math","floor","random","App","state","currentScore","status","clicked","shuffleImages","setState","handleIncrement","newScore","reset","indexOf","concat","this","map","key","picture","Component","ReactDOM","render","document","getElementById"],"mappings":"8yDAgBeA,G,MAZD,SAAAC,GAAK,OACjB,yBACEC,UAAU,OACVC,MAAOF,EAAMG,GACbC,QAAS,kBAAMJ,EAAMK,YAAYL,EAAMG,MAEvC,yBAAKF,UAAU,iBACb,yBAAKK,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,YCKxBC,G,MAbH,SAAAV,GAAK,OACf,6BACE,4BACE,wBAAIC,UAAU,yCACZ,uBAAGU,KAAK,iBAAiBX,EAAMY,QAEjC,wBAAIT,GAAG,MAAOH,EAAMa,kBACpB,wBAAIZ,UAAU,cAAd,YAAqCD,EAAMc,MAA3C,mBAAkEd,EAAMe,cCL/DC,G,MAFC,SAAAhB,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMiB,YCE1CC,G,MAFD,SAAAlB,GAAK,OAAI,wBAAIC,UAAU,SAASD,EAAMiB,YCOpD,SAASE,EAAWC,GACnB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC1C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADA,EAEnB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFmC,KAE/BD,EAAMG,GAFyB,KAI3C,OAAOH,E,IAwFOO,E,4MAnFdC,MAAQ,CACPnB,QACAoB,aAAc,EACdd,SAAU,EACVe,OAAQ,GACRC,QAAS,I,EAGVC,cAAgB,WACf,IAAIA,EAAgBb,EAAWV,GAC/B,EAAKwB,SAAS,CAAExB,MAAOuB,K,EAGxBE,gBAAkB,WACjB,IAAMC,EAAW,EAAKP,MAAMC,aAAe,EAC3C,EAAKI,SAAS,CACbJ,aAAcM,EACdL,OAAQ,yCAELK,GAAY,EAAKP,MAAMb,SAC1B,EAAKkB,SAAS,CAAElB,SAASoB,IAEJ,KAAbA,GACR,EAAKF,SAAS,CAAEH,OAAQ,2CAEzB,EAAKE,iB,EAGNI,MAAQ,WACP,EAAKH,SAAS,CACbJ,aAAc,EACdd,SAAU,EAAKa,MAAMb,SACrBe,OAAO,2BACPC,QAAS,KAEV,EAAKC,iB,EAGN3B,YAAc,SAAAF,IAC0B,IAApC,EAAKyB,MAAMG,QAAQM,QAAQlC,IAC9B,EAAK+B,kBACL,EAAKD,SAAS,CAAEF,QAAS,EAAKH,MAAMG,QAAQO,OAAOnC,MAEnD,EAAKiC,S,uDAII,IAAD,OACR,OACA,kBAAC,EAAD,KAEC,kBAAC,EAAD,CACCxB,MAAM,cACNG,SAAUwB,KAAKX,MAAMb,SACrBD,MAAOyB,KAAKX,MAAMC,aAElBhB,iBAAkB0B,KAAKX,MAAMf,mBAG9B,kBAAC,EAAD,0GAGA,yBAAKZ,UAAY,OAChB,yBAAKA,UAAY,UAEhBsC,KAAKX,MAAMnB,MAAM+B,KAAI,SAAA/B,GAAK,OAC1B,kBAAC,EAAD,CACCgC,IAAOhC,EAAMN,GACbA,GAAOM,EAAMN,GACbM,MAAUA,EAAMiC,QAChBrC,YAAgB,EAAKA,YACrB+B,MAAU,EAAKA,MACfJ,cAAkB,EAAKA,0B,GA1EXW,aCZlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4cba9858.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport \"./Album.css\";\n\nconst Album = props => (\n  <div\n    className=\"card\"\n    value={props.id}\n    onClick={() => props.handleClick(props.id)}\n  >\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Album;","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = props => (\n  <nav>\n    <ul>\n      <li className=\"brand animated lightSpeedIn alignLeft\">\n        <a href=\"/clicky-game/\">{props.title}</a>\n      </li>\n      <li id=\"rw\" >{props.correctIncorrect}</li>\n      <li className=\"alignRight\">Current: {props.score} | Score - Top: {props.topScore}</li>\n\n    </ul>\n  </nav>\n);\n\nexport default Nav;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport image from \"./images.json\";\nimport Album from \"../src/components/Album\";\nimport Nav from \"../src/components/Nav\";\nimport Wrapper from \"../src/components/Wrapper\";\nimport Title from \"../src/components/Title\";\n\n\n// Fisher Yates Shuffle\nfunction randomizer(array) {\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\treturn array;\n};\n\nclass App extends Component {\n\t// Setting this.state\n\tstate = {\n\t\timage,\n\t\tcurrentScore: 0,\n\t\ttopScore: 0,\n\t\tstatus: \"\",\n\t\tclicked: [],\n\t};\n\n\tshuffleImages = () => {\n\t\tlet shuffleImages = randomizer(image);\n\t\tthis.setState({ image: shuffleImages });\n\t};\n\n\thandleIncrement = () => {\n\t\tconst newScore = this.state.currentScore + 1;\n\t\tthis.setState({\n\t\t\tcurrentScore: newScore,\n\t\t\tstatus: \"You have already clicked this album.\"\n\t\t});\n\t\tif (newScore >= this.state.topScore) {\n\t\t\tthis.setState({ topScore:newScore });\n\t\t}\n\t\telse if (newScore === 24) {\n\t\t\tthis.setState({ status: \"YOU ARE THE CHAMPION... OF THE WORLD!!\"});\n\t\t}\n\t\tthis.shuffleImages();\n\t};\n\n\treset = () => {\n\t\tthis.setState({\n\t\t\tcurrentScore: 0,\n\t\t\ttopScore: this.state.topScore,\n\t\t\tstatus:\"You guessed incorrectly!\",\n\t\t\tclicked: [],\n\t\t});\n\t\tthis.shuffleImages();\n\t};\n\n\thandleClick = id => {\n\tif (this.state.clicked.indexOf(id) === -1) {\n\t\tthis.handleIncrement();\n\t\tthis.setState({ clicked: this.state.clicked.concat(id)});\n\t} else {\n\t\tthis.reset();\n\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t<Wrapper>\n\n\t\t\t<Nav\n\t\t\t\ttitle=\"Clicky Game\"\n\t\t\t\ttopScore={this.state.topScore}\n\t\t\t\tscore={this.state.currentScore}\n\n\t\t\t\tcorrectIncorrect={this.state.correctIncorrect}\n\t\t\t/>\n\n\t\t\t<Title> Click on an album cover to earn points.  You are only allowed to click on each album cover once!\n\t\t\t</Title>\n\n\t\t\t<div className = \"row\">\n\t\t\t\t<div className = \"column\">\n\n\t\t\t\t{this.state.image.map(image => (\n\t\t\t\t\t<Album\n\t\t\t\t\t\tkey ={ image.id }\n\t\t\t\t\t\tid = { image.id }\n\t\t\t\t\t\timage = { image.picture }\n\t\t\t\t\t\thandleClick = { this.handleClick }\n\t\t\t\t\t\treset = { this.reset }\n\t\t\t\t\t\tshuffleImages = { this.shuffleImages }\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</Wrapper>\n\t\t);\n\t};\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}